import scrapy
from bs4 import BeautifulSoup
from datetime import datetime
#from scrapy.mail import MailSender
#import smtplib
#from socket import gaierror
#import json


class GucciBeltsSpider(scrapy.Spider):
    name = 'gucci_belts'
    allowed_domains = ['gucci.com']
    start_urls = ['https://www.gucci.com/ca/en/pr/children/girls/belts-for-girls/childrens-leather-double-g-belt-p-432707B960X1000']

    def parse(self, response):
        print("processing: "+response.url)
        
        #extract avaliable sizes
        sizes_web = response.xpath("//div[@class='content-select']").extract()
        sizes_lst = sizes_web[0].split("\n")
        
        all_avaliable_size = []
        for s in sizes_lst:
            size = s.strip()
#            print(size)
            if '</option>' in size: 
                index = size.find("</option>")
                all_avaliable_size.append(size[:index])
        print("All avaliable sizes for Children's leather Double G belt:" + str(all_avaliable_size))
        
        
        #extract price
        html_content=response.xpath("//div[@class='product-price product-detail-price']").extract()[0]
        soup = BeautifulSoup(html_content, "lxml")
        price = soup.find("span",class_="price").get_text()
        print("Price: "+ str(price))
        price_clean = price.strip("\n")
        
        #run time
        now = datetime.now()
        dt_string = now.strftime("%Y-%b-%d %H:%M:%S")
        
        
        #Output in json file
        yield {
                'Run Time': dt_string,
                'Product': "Children's leather Double G belt", 
                'Sizes': all_avaliable_size, 
                'Price': price_clean,
                'Website': response.url}
        
#        yield {"Product": "Children's leather Double G belt"}
#        yield {"Sizes": all_avaliable_size}
#        yield {"Price": price.strip("\n")}
#        yield {"Website": response.url}

##--------------------------read json file-------------------------------         
#with open(r'C:\Users\zhuya\Desktop\crawler\crawler\Log_jiayu.json', "r") as f:
#    lines = f.read().splitlines()
#    last_line = lines[-2]
##    print (last_line)
#last_run = json.loads(last_line)
#sizes_last = last_run["Sizes"]
#price_last = last_run["Price"]
#product_last = last_run["Product"]
#web_last = last_run["Website"]
#run_time_last=last_run["Run Time"]
#
#now = datetime.now()
#dt_string = now.strftime("%Y-%b-%d %H:%M:%S")
#
#run_hour_script = run_time_last.split(" ")[1][:2]
#run_hour_real = dt_string.split(" ")[1][:2]
#
##-------------mailtrap testing-----------------
##port = 2525 
##smtp_server = "smtp.mailtrap.io"
##login = "166f7e1d6cc4aa" # paste your login generated by Mailtrap
##password = "0836e783ec902b" # paste your password generated by Mailtrap
##sender = "joyce@mailtrap.com"
#
##--------------joycelutst gmail----------------    
#smtp_server = "smtp.gmail.com"
#port = 587
#login = "joycelutst@gmail.com"
#password = "Tst@950826"
#
## specify the sender’s and receiver’s email addresses
#sender = "joycelutst@gmail.com"
#receiver = "joycelu826@gmail.com"
#
## type your message: use two newlines (\n) to separate the subject from the message body, and use 'f' to  automatically insert variables in the text
#body = f"\nProduct: {product_last}\n\nAll avaliable sizes: {sizes_last}\n\nPrice: {price_last}\n\nURL: {web_last}\n\nRun Time: {run_time_last}" 
#        
#message = f"""\
#Subject: Gucci has your size now!!!
#To: {receiver}
#From: {sender}
#
#{body}.""" 
#
#message_running = f"""\
#Subject: Script runs successfully today
#To: {receiver}
#From: {sender}
#
#Script is running today. Results are as below:
#{body}.""" 
#
#message_failed = f"""\
#Subject: Script is broken!!!
#To: {receiver}
#From: {sender}
#
#Script fails running. Last run result is as below:
#{body}.""" 
#
#
#
#print(message)
#if "L" in sizes_last:
#    server = smtplib.SMTP(smtp_server, port)
#    server.ehlo()
#    server.starttls()
#    server.ehlo()
#    server.login(login, password)
#    server.sendmail(sender, receiver, message)
#    server.quit()
#    print('Sent')
#
##----------------Verify if the script is running at 10AM every morning----------------
#elif " 18:" in run_time_last:
#    server = smtplib.SMTP(smtp_server, port)
#    server.ehlo()
#    server.starttls()
#    server.ehlo()
#    server.login(login, password)
#    server.sendmail(sender, receiver, message_running)
#    server.quit()
#    print('Validated')
#
##----------------------Send Email when script is broken---------------------
#elif run_hour_script!=run_hour_real:
#    server = smtplib.SMTP(smtp_server, port)
#    server.ehlo()
#    server.starttls()
#    server.ehlo()
#    server.login(login, password)
#    server.sendmail(sender, receiver, message_failed)
#    server.quit()
#
##    try:
##        #send your message with credentials specified above
##        server = smtplib.SMTP(smtp_server, port)
###        with smtplib.SMTP(smtp_server, port) as server:
##        server.login(login, password)
##        server.sendmail(sender, receiver, message)
##        server.quit()
##        # tell the script to report if your message was sent or which errors need to be fixed 
##        print('Sent')
##    except (gaierror, ConnectionRefusedError):
##        print('Failed to connect to the server. Bad connection settings?')
##    except smtplib.SMTPServerDisconnected:
##        print('Failed to connect to the server. Wrong user/password?')
##    except smtplib.SMTPException as e:
##        print('SMTP error occurred: ' + str(e))
#    
#
##-----------------------Log file only contains 2 days results---------------------------    
#if len(lines) > 50:
#    with open(r'C:\Users\zhuya\Desktop\crawler\crawler\Log_jiayu.json', "w") as f:
#        lines_to_keep = lines[-50:]
#        for line in lines_to_keep:
#            f.write(line+"\n")
#        f.close()
            

            